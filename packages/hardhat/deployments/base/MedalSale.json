{
  "address": "0xA85Ab2084D5DeB521ab0268840938dC0FE114368",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_medal",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Bought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensPerEth",
          "type": "uint256"
        }
      ],
      "name": "SaleComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "_buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "name": "addBatchToBonusWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addToBonusWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressBonusEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressEthSpent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEthSpent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bonusWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buyers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "changeEndTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFractions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "medal",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "medalTreasury",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFeeDestination",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStatus",
      "outputs": [
        {
          "internalType": "enum MedalSale.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sweepTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensPerEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9931f2b20618912b4c0c876b6c1de108d92a952a99081d08fffdebaff9f9385e",
  "receipt": {
    "to": null,
    "from": "0xf87Eaea53f15189385a5fb33b6Ad0c61C6047d47",
    "contractAddress": "0xA85Ab2084D5DeB521ab0268840938dC0FE114368",
    "transactionIndex": 38,
    "gasUsed": "1330172",
    "logsBloom": "0x
    "blockHash": "0x35901aea784f5ed1656c931d44448f94155f4e4cc49a7ae06c8f7e4c8543504a",
    "transactionHash": "0x9931f2b20618912b4c0c876b6c1de108d92a952a99081d08fffdebaff9f9385e",
    "logs": [
      {
        "transactionIndex": 38,
        "blockNumber": 18146010,
        "transactionHash": "0x9931f2b20618912b4c0c876b6c1de108d92a952a99081d08fffdebaff9f9385e",
        "address": "0xA85Ab2084D5DeB521ab0268840938dC0FE114368",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f87eaea53f15189385a5fb33b6ad0c61c6047d47"
        ],
        "data": "0x",
        "logIndex": 149,
        "blockHash": "0x35901aea784f5ed1656c931d44448f94155f4e4cc49a7ae06c8f7e4c8543504a"
      }
    ],
    "blockNumber": 18146010,
    "cumulativeGasUsed": "10982593",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF9ce26376B692dAD48f853AAAfDD632050c9b09d"
  ],
  "numDeployments": 1,
  "solcInputHash": "eb8f8d362f40c15821f4b74e448104ff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_medal\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensPerEth\",\"type\":\"uint256\"}],\"name\":\"SaleComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"_buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"addBatchToBonusWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToBonusWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressBonusEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressEthSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEthSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bonusWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buyers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"changeEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFractions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"medal\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"medalTreasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeDestination\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStatus\",\"outputs\":[{\"internalType\":\"enum MedalSale.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweepTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensPerEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"changeEndTime(uint256)\":{\"params\":{\"_endTime\":\"Duration of the sale in unix timestamp\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EthToTokenSale.sol\":\"MedalSale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/EthToTokenSale.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n//Compatible with OpenZeppelin Contracts ^5.0.0\\n\\npragma solidity 0.8.26;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./dex/interfaces/IUniswapV2Router.sol\\\";\\nimport \\\"./dex/interfaces/IUniswapV2Factory.sol\\\";\\n//No reentrancy guard\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract MedalSale is ReentrancyGuard, Ownable {\\n\\taddress payable public constant platformFeeDestination =\\n\\t\\tpayable(0xf87Eaea53f15189385a5fb33b6Ad0c61C6047d47);\\n\\taddress payable public constant medalTreasury =\\n\\t\\tpayable(0xC3Cc6d2db567aF6669beC02c8084E71B1714643a);\\n\\n\\tIERC20 public immutable medal;\\n\\n\\tmapping(address => uint256) public addressEthSpent;\\n\\tmapping(address => uint256) public addressBonusEarned;\\n\\n\\taddress[] public buyers;\\n\\n\\tuint256 public constant tokensAvailable = 20_000_000 * 10 ** 18; // 20% of the tokenSupply to be sold\\n\\tuint256 public constant softCap = 400 ether; // 400 ETH\\n\\n\\tmapping(address => bool) public bonusWhitelist; // Holders of $PEOPLE, $DOG and $JENNER get a 25% bonus on their ETH Spent\\n\\tuint256 public bonusEthSpent;\\n\\tuint256 public ethRaised;\\n\\n\\tuint256 public tokensPerEth;\\n\\n\\tenum Status {\\n\\t\\tNOT_STARTED,\\n\\t\\tSTARTED,\\n\\t\\tCLOSED,\\n\\t\\tDISTRIBUTION,\\n\\t\\tREFUNDING\\n\\t}\\n\\n\\tStatus public saleStatus;\\n\\n\\tuint256 public saleEndTime = 1724328000; // Thursday, 22 August 2024 12:00:00 GMT\\n\\n\\tevent Bought(address buyer, uint256 amount);\\n\\n\\tevent Withdrawn(address buyer, uint256 amount);\\n\\tevent SaleComplete(uint256 tokensPerEth);\\n\\n\\tconstructor(address _medal) Ownable(msg.sender) {\\n\\t\\tmedal = IERC20(_medal);\\n\\t}\\n\\n\\tfunction buyersLength() public view returns (uint256) {\\n\\t\\treturn buyers.length;\\n\\t}\\n\\n\\tfunction buyTokens() public payable {\\n\\t\\t_buyTokens(msg.sender);\\n\\t}\\n\\n\\treceive() external payable {\\n\\t\\t_buyTokens(msg.sender);\\n\\t}\\n\\n\\t///@param _endTime Duration of the sale in unix timestamp\\n\\n\\tfunction changeEndTime(uint256 _endTime) public onlyOwner {\\n\\t\\trequire(saleStatus != Status.CLOSED, \\\"Sale cannot be closed\\\");\\n\\t\\tsaleEndTime = _endTime;\\n\\t}\\n\\tfunction openSale() public onlyOwner {\\n\\t\\trequire(saleStatus == Status.NOT_STARTED, \\\"Sale has already started\\\");\\n\\t\\tsaleStatus = Status.STARTED;\\n\\t}\\n\\n\\tfunction closeSale() public onlyOwner {\\n\\t\\trequire(saleStatus == Status.STARTED, \\\"Sale must be active\\\");\\n\\t\\trequire(block.timestamp >= saleEndTime, \\\"Sale time needs to elapse\\\");\\n\\t\\trequire(\\n\\t\\t\\taddress(this).balance >= softCap,\\n\\t\\t\\t\\\"Auction reserve not reached\\\"\\n\\t\\t);\\n\\t\\tsaleStatus = Status.CLOSED;\\n\\t\\tuint256 _ethRaised = address(this).balance + bonusEthSpent;\\n\\t\\tethRaised = address(this).balance;\\n\\t\\ttokensPerEth = tokensAvailable / _ethRaised; //Safe to assume we won't have more than 20M ETH raised\\n\\n\\t\\temit SaleComplete(tokensPerEth);\\n\\t}\\n\\n\\tfunction _buyTokens(address _buyer) public payable nonReentrant {\\n\\t\\t//Checks\\n\\t\\trequire(saleStatus == Status.STARTED, \\\"Sale is not active\\\");\\n\\t\\trequire(block.timestamp < saleEndTime, \\\"Sale time has elapsed\\\");\\n\\t\\trequire(msg.value > 0, \\\"No ETH sent\\\");\\n\\n\\t\\t//Check if user is in the bonus whitelist\\n\\n\\t\\t//User effects\\n\\t\\tuint256 _totalContribution = msg.value;\\n\\t\\tif (bonusWhitelist[_buyer]) {\\n\\t\\t\\tuint256 _bonus = msg.value / 4;\\n\\t\\t\\taddressEthSpent[_buyer] += msg.value;\\n\\t\\t\\taddressBonusEarned[_buyer] += _bonus;\\n\\t\\t\\tbonusEthSpent += _bonus;\\n\\t\\t\\t_totalContribution += _bonus;\\n\\t\\t} else {\\n\\t\\t\\taddressEthSpent[_buyer] += msg.value;\\n\\t\\t}\\n\\n\\t\\tuint256 _buyersLength = buyers.length;\\n\\t\\tif (_buyersLength == 0) {\\n\\t\\t\\tbuyers.push(_buyer);\\n\\t\\t} else {\\n\\t\\t\\tfor (uint256 i; i < _buyersLength; ++i) {\\n\\t\\t\\t\\tif (buyers[i] == _buyer) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t} else if (i == _buyersLength - 1) {\\n\\t\\t\\t\\t\\tbuyers.push(_buyer);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\temit Bought(_buyer, _totalContribution);\\n\\t}\\n\\n\\tfunction claimFractions() public {\\n\\t\\t//When sale is closed allow users to claim their fraction of the medal\\n\\t\\trequire(saleStatus == Status.CLOSED, \\\"Sale is not complete\\\");\\n\\t\\tuint256 _allocation = (addressEthSpent[msg.sender] +\\n\\t\\t\\taddressBonusEarned[msg.sender]) * tokensPerEth;\\n\\t\\trequire(_allocation > 0, \\\"No tokens to claim\\\");\\n\\t\\taddressEthSpent[msg.sender] = 0;\\n\\t\\taddressBonusEarned[msg.sender] = 0;\\n\\t\\tmedal.transfer(msg.sender, _allocation);\\n\\t\\temit Withdrawn(msg.sender, _allocation);\\n\\t}\\n\\n\\tfunction allowRefunds() public onlyOwner {\\n\\t\\trequire(saleStatus == Status.STARTED, \\\"Sale must be ongoing\\\");\\n\\t\\tsaleStatus = Status.REFUNDING;\\n\\t}\\n\\n\\tfunction resetSale() public onlyOwner {\\n\\t\\tsaleStatus = Status.NOT_STARTED;\\n\\t}\\n\\n\\tfunction refund() public nonReentrant {\\n\\t\\trequire(saleStatus == Status.REFUNDING, \\\"Refunds are not allowed\\\");\\n\\t\\tuint256 _ethSpent = addressEthSpent[msg.sender];\\n\\t\\trequire(_ethSpent > 0, \\\"No ETH to refund\\\");\\n\\t\\taddressEthSpent[msg.sender] = 0;\\n\\t\\taddressBonusEarned[msg.sender] = 0;\\n\\t\\tpayable(msg.sender).transfer(_ethSpent);\\n\\t}\\n\\n\\tfunction addToBonusWhitelist(address _address) public onlyOwner {\\n\\t\\tbonusWhitelist[_address] = true;\\n\\t}\\n\\n\\tfunction addBatchToBonusWhitelist(\\n\\t\\taddress[] memory _addresses\\n\\t) public onlyOwner {\\n\\t\\tfor (uint256 i; i < _addresses.length; ++i) {\\n\\t\\t\\tbonusWhitelist[_addresses[i]] = true;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction withdrawEth() public onlyOwner {\\n\\t\\trequire(saleStatus == Status.CLOSED, \\\"Sale must be complete\\\");\\n\\t\\tuint256 _ethRaised = address(this).balance;\\n\\t\\tplatformFeeDestination.transfer(_ethRaised / 5); // 20% of the total ETH raised\\n\\t\\tmedalTreasury.transfer(address(this).balance);\\n\\t}\\n\\n\\tfunction sweepTokens() public onlyOwner {\\n\\t\\tuint256 _balance = medal.balanceOf(address(this));\\n\\t\\tif (saleStatus == Status.NOT_STARTED) {\\n\\t\\t\\t//If the sale has not started, return the tokens to the treasury\\n\\t\\t\\tmedal.transfer(msg.sender, _balance);\\n\\t\\t} else {\\n\\t\\t\\t//Wait for at least 30 days after the sale is complete\\n\\t\\t\\trequire(\\n\\t\\t\\t\\tblock.timestamp >= saleEndTime + 30 days,\\n\\t\\t\\t\\t\\\"Cannot sweep tokens yet\\\"\\n\\t\\t\\t);\\n\\t\\t\\tmedal.transfer(msg.sender, _balance);\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xab0ecadb7553c3b94a8caf37063d917a8b5976258ab4034ecde9947144026422\",\"license\":\"MIT\"},\"contracts/dex/interfaces/IUniswapV2Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.26;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(\\n        address tokenA,\\n        address tokenB\\n    ) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(\\n        address tokenA,\\n        address tokenB\\n    ) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xf6d1f3a9a8d5bb37c01e6647ce0a5fd9955f9de9dbf7ed53073d0f4ae56ac9df\",\"license\":\"GPL-3.0-or-later\"},\"contracts/dex/interfaces/IUniswapV2Router.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.26;\\n\\nimport {IUniswapV2Router01} from \\\"./IUniswapV2Router01.sol\\\";\\n\\ninterface IUniswapV2Router is IUniswapV2Router01 {\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountETH);\\n\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountETH);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2ce596039bc1ae59b79ecc87d4a5c8c80828da953efd5fb848f0da81a1b7043f\",\"license\":\"GPL-3.0-or-later\"},\"contracts/dex/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.26;\\n\\n//solhint-disable func-name-mixedcase\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETH(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint256 liquidity,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline,\\n        bool approveMax,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactETH(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactTokensForETH(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapETHForExactTokens(\\n        uint256 amountOut,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountOut);\\n\\n    function getAmountIn(\\n        uint256 amountOut,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) external pure returns (uint256 amountIn);\\n\\n    function getAmountsOut(\\n        uint256 amountIn,\\n        address[] calldata path\\n    ) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(\\n        uint256 amountOut,\\n        address[] calldata path\\n    ) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x2ac1a71638305338c03c12dd6d4fdc506c010b41c808419a281369c08e25382c\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a06040526366c72840600a5534801561001857600080fd5b50604051611707380380611707833981016040819052610037916100cf565b6001600055338061006257604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006b8161007d565b506001600160a01b03166080526100ff565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100e157600080fd5b81516001600160a01b03811681146100f857600080fd5b9392505050565b6080516115d16101366000396000818161033c01528181610c1201528181610cc101528181610db2015261101601526115d16000f3fe6080604052600436106101dc5760003560e01c80639c70147111610102578063d0febe4c11610095578063f2aa821811610064578063f2aa821814610523578063f2fde38b14610543578063f9020e3314610563578063fddf0fc01461058a57600080fd5b8063d0febe4c146104b0578063e0646014146104b8578063ed338ff1146104f8578063ee55efee1461050e57600080fd5b8063ae3a725a116100d1578063ae3a725a1461045a578063c1e1d95414610470578063cbdd69b514610485578063cc76ac061461049b57600080fd5b80639c701471146103d6578063a0ef91df14610403578063a88661f414610418578063ad845c131461042d57600080fd5b806359c656df1161017a5780638925dbcc116101495780638925dbcc1461035e5780638da5cb5b14610373578063906a26e0146103915780639588daf0146103ae57600080fd5b806359c656df146102d357806360659a92146102e8578063715018a61461031557806381f237b81461032a57600080fd5b80633052b75e116101b65780633052b75e1461023957806348df2eb5146102595780634a1adf8914610279578063590e1ae3146102be57600080fd5b80630cf7422d146101f1578063167ff46f146102115780631f5e881f1461022657600080fd5b366101ec576101ea336105a0565b005b600080fd5b3480156101fd57600080fd5b506101ea61020c366004611386565b6108ce565b34801561021d57600080fd5b506101ea610938565b6101ea610234366004611456565b6105a0565b34801561024557600080fd5b506101ea610254366004611478565b6109bc565b34801561026557600080fd5b506101ea610274366004611456565b610a27565b34801561028557600080fd5b506102a173f87eaea53f15189385a5fb33b6ad0c61c6047d4781565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102ca57600080fd5b506101ea610a53565b3480156102df57600080fd5b506101ea610b67565b3480156102f457600080fd5b506103076a108b2a2c2802909400000081565b6040519081526020016102b5565b34801561032157600080fd5b506101ea610be0565b34801561033657600080fd5b506102a17f000000000000000000000000000000000000000000000000000000000000000081565b34801561036a57600080fd5b506101ea610bf2565b34801561037f57600080fd5b506001546001600160a01b03166102a1565b34801561039d57600080fd5b506103076815af1d78b58c40000081565b3480156103ba57600080fd5b506102a173c3cc6d2db567af6669bec02c8084e71b1714643a81565b3480156103e257600080fd5b506103076103f1366004611456565b60036020526000908152604090205481565b34801561040f57600080fd5b506101ea610de9565b34801561042457600080fd5b50600454610307565b34801561043957600080fd5b50610307610448366004611456565b60026020526000908152604090205481565b34801561046657600080fd5b5061030760065481565b34801561047c57600080fd5b506101ea610edc565b34801561049157600080fd5b5061030760085481565b3480156104a757600080fd5b506101ea610ef8565b6101ea6110c1565b3480156104c457600080fd5b506104e86104d3366004611456565b60056020526000908152604090205460ff1681565b60405190151581526020016102b5565b34801561050457600080fd5b50610307600a5481565b34801561051a57600080fd5b506101ea6110ca565b34801561052f57600080fd5b506102a161053e366004611478565b611246565b34801561054f57600080fd5b506101ea61055e366004611456565b611270565b34801561056f57600080fd5b5060095461057d9060ff1681565b6040516102b591906114a7565b34801561059657600080fd5b5061030760075481565b6105a86112ab565b600160095460ff1660048111156105c1576105c1611491565b146106085760405162461bcd60e51b815260206004820152601260248201527153616c65206973206e6f742061637469766560701b60448201526064015b60405180910390fd5b600a5442106106515760405162461bcd60e51b815260206004820152601560248201527414d85b19481d1a5b59481a185cc8195b185c1cd959605a1b60448201526064016105ff565b6000341161068f5760405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b60448201526064016105ff565b6001600160a01b038116600090815260056020526040902054349060ff161561074a5760006106bf6004346114e5565b6001600160a01b0384166000908152600260205260408120805492935034929091906106ec908490611507565b90915550506001600160a01b03831660009081526003602052604081208054839290610719908490611507565b9250508190555080600660008282546107329190611507565b9091555061074290508183611507565b915050610778565b6001600160a01b03821660009081526002602052604081208054349290610772908490611507565b90915550505b60045460008190036107d457600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03851617905561087d565b60005b8181101561087b57836001600160a01b0316600482815481106107fc576107fc611520565b6000918252602090912001546001600160a01b03161461087b57610821600183611536565b810361087357600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0386161790555b6001016107d7565b505b604080516001600160a01b0385168152602081018490527fc55650ccda1011e1cdc769b1fbf546ebb8c97800b6072b49e06cd560305b1d67910160405180910390a150506108cb6001600055565b50565b6108d66112d5565b60005b8151811015610934576001600560008484815181106108fa576108fa611520565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016108d9565b5050565b6109406112d5565b600060095460ff16600481111561095957610959611491565b146109a65760405162461bcd60e51b815260206004820152601860248201527f53616c652068617320616c72656164792073746172746564000000000000000060448201526064016105ff565b600980546001919060ff191682805b0217905550565b6109c46112d5565b600260095460ff1660048111156109dd576109dd611491565b03610a225760405162461bcd60e51b815260206004820152601560248201527414d85b194818d85b9b9bdd0818994818db1bdcd959605a1b60448201526064016105ff565b600a55565b610a2f6112d5565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b610a5b6112ab565b600460095460ff166004811115610a7457610a74611491565b14610ac15760405162461bcd60e51b815260206004820152601760248201527f526566756e647320617265206e6f7420616c6c6f77656400000000000000000060448201526064016105ff565b3360009081526002602052604090205480610b115760405162461bcd60e51b815260206004820152601060248201526f139bc8115512081d1bc81c99599d5b9960821b60448201526064016105ff565b33600081815260026020908152604080832083905560039091528082208290555183156108fc0291849190818181858888f19350505050158015610b59573d6000803e3d6000fd5b5050610b656001600055565b565b610b6f6112d5565b600160095460ff166004811115610b8857610b88611491565b14610bcc5760405162461bcd60e51b815260206004820152601460248201527353616c65206d757374206265206f6e676f696e6760601b60448201526064016105ff565b600980546004919060ff19166001836109b5565b610be86112d5565b610b656000611302565b610bfa6112d5565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190611549565b9050600060095460ff166004811115610ca057610ca0611491565b03610d375760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044015b6020604051808303816000875af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190611562565b600a54610d479062278d00611507565b421015610d965760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420737765657020746f6b656e732079657400000000000000000060448201526064016105ff565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401610cf4565b610df16112d5565b600260095460ff166004811115610e0a57610e0a611491565b14610e4f5760405162461bcd60e51b815260206004820152601560248201527453616c65206d75737420626520636f6d706c65746560581b60448201526064016105ff565b4773f87eaea53f15189385a5fb33b6ad0c61c6047d476108fc610e736005846114e5565b6040518115909202916000818181858888f19350505050158015610e9b573d6000803e3d6000fd5b5060405173c3cc6d2db567af6669bec02c8084e71b1714643a904780156108fc02916000818181858888f19350505050158015610934573d6000803e3d6000fd5b610ee46112d5565b600980546000919060ff19166001836109b5565b600260095460ff166004811115610f1157610f11611491565b14610f555760405162461bcd60e51b815260206004820152601460248201527353616c65206973206e6f7420636f6d706c65746560601b60448201526064016105ff565b600854336000908152600360209081526040808320546002909252822054919291610f809190611507565b610f8a9190611584565b905060008111610fd15760405162461bcd60e51b81526020600482015260126024820152714e6f20746f6b656e7320746f20636c61696d60701b60448201526064016105ff565b3360008181526002602090815260408083208390556003909152808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561105f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110839190611562565b5060408051338152602081018390527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d591015b60405180910390a150565b610b65336105a0565b6110d26112d5565b600160095460ff1660048111156110eb576110eb611491565b1461112e5760405162461bcd60e51b815260206004820152601360248201527253616c65206d7573742062652061637469766560681b60448201526064016105ff565b600a544210156111805760405162461bcd60e51b815260206004820152601960248201527f53616c652074696d65206e6565647320746f20656c617073650000000000000060448201526064016105ff565b6815af1d78b58c4000004710156111d95760405162461bcd60e51b815260206004820152601b60248201527f41756374696f6e2072657365727665206e6f742072656163686564000000000060448201526064016105ff565b6009805460ff191660021790556006546000906111f69047611507565b476007559050611211816a108b2a2c280290940000006114e5565b60088190556040519081527fef75b5a390479d0727b87d3987ed96018984bdd53fa4946005292453ec3ff76d906020016110b6565b6004818154811061125657600080fd5b6000918252602090912001546001600160a01b0316905081565b6112786112d5565b6001600160a01b0381166112a257604051631e4fbdf760e01b8152600060048201526024016105ff565b6108cb81611302565b6002600054036112ce57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001546001600160a01b03163314610b655760405163118cdaa760e01b81523360048201526024016105ff565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461138157600080fd5b919050565b60006020828403121561139857600080fd5b813567ffffffffffffffff8111156113af57600080fd5b8201601f810184136113c057600080fd5b803567ffffffffffffffff8111156113da576113da611354565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561140757611407611354565b60405291825260208184018101929081018784111561142557600080fd5b6020850194505b8385101561144b5761143d8561136a565b81526020948501940161142c565b509695505050505050565b60006020828403121561146857600080fd5b6114718261136a565b9392505050565b60006020828403121561148a57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600583106114c957634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b60008261150257634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561151a5761151a6114cf565b92915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561151a5761151a6114cf565b60006020828403121561155b57600080fd5b5051919050565b60006020828403121561157457600080fd5b8151801515811461147157600080fd5b808202811582820484141761151a5761151a6114cf56fea26469706673582212208471182d81a01cd66e4269753affbdf738f6326fe50d02bd555b79d6869ac1eb64736f6c634300081a0033",
  "deployedBytecode": "0x6080604052600436106101dc5760003560e01c80639c70147111610102578063d0febe4c11610095578063f2aa821811610064578063f2aa821814610523578063f2fde38b14610543578063f9020e3314610563578063fddf0fc01461058a57600080fd5b8063d0febe4c146104b0578063e0646014146104b8578063ed338ff1146104f8578063ee55efee1461050e57600080fd5b8063ae3a725a116100d1578063ae3a725a1461045a578063c1e1d95414610470578063cbdd69b514610485578063cc76ac061461049b57600080fd5b80639c701471146103d6578063a0ef91df14610403578063a88661f414610418578063ad845c131461042d57600080fd5b806359c656df1161017a5780638925dbcc116101495780638925dbcc1461035e5780638da5cb5b14610373578063906a26e0146103915780639588daf0146103ae57600080fd5b806359c656df146102d357806360659a92146102e8578063715018a61461031557806381f237b81461032a57600080fd5b80633052b75e116101b65780633052b75e1461023957806348df2eb5146102595780634a1adf8914610279578063590e1ae3146102be57600080fd5b80630cf7422d146101f1578063167ff46f146102115780631f5e881f1461022657600080fd5b366101ec576101ea336105a0565b005b600080fd5b3480156101fd57600080fd5b506101ea61020c366004611386565b6108ce565b34801561021d57600080fd5b506101ea610938565b6101ea610234366004611456565b6105a0565b34801561024557600080fd5b506101ea610254366004611478565b6109bc565b34801561026557600080fd5b506101ea610274366004611456565b610a27565b34801561028557600080fd5b506102a173f87eaea53f15189385a5fb33b6ad0c61c6047d4781565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102ca57600080fd5b506101ea610a53565b3480156102df57600080fd5b506101ea610b67565b3480156102f457600080fd5b506103076a108b2a2c2802909400000081565b6040519081526020016102b5565b34801561032157600080fd5b506101ea610be0565b34801561033657600080fd5b506102a17f000000000000000000000000000000000000000000000000000000000000000081565b34801561036a57600080fd5b506101ea610bf2565b34801561037f57600080fd5b506001546001600160a01b03166102a1565b34801561039d57600080fd5b506103076815af1d78b58c40000081565b3480156103ba57600080fd5b506102a173c3cc6d2db567af6669bec02c8084e71b1714643a81565b3480156103e257600080fd5b506103076103f1366004611456565b60036020526000908152604090205481565b34801561040f57600080fd5b506101ea610de9565b34801561042457600080fd5b50600454610307565b34801561043957600080fd5b50610307610448366004611456565b60026020526000908152604090205481565b34801561046657600080fd5b5061030760065481565b34801561047c57600080fd5b506101ea610edc565b34801561049157600080fd5b5061030760085481565b3480156104a757600080fd5b506101ea610ef8565b6101ea6110c1565b3480156104c457600080fd5b506104e86104d3366004611456565b60056020526000908152604090205460ff1681565b60405190151581526020016102b5565b34801561050457600080fd5b50610307600a5481565b34801561051a57600080fd5b506101ea6110ca565b34801561052f57600080fd5b506102a161053e366004611478565b611246565b34801561054f57600080fd5b506101ea61055e366004611456565b611270565b34801561056f57600080fd5b5060095461057d9060ff1681565b6040516102b591906114a7565b34801561059657600080fd5b5061030760075481565b6105a86112ab565b600160095460ff1660048111156105c1576105c1611491565b146106085760405162461bcd60e51b815260206004820152601260248201527153616c65206973206e6f742061637469766560701b60448201526064015b60405180910390fd5b600a5442106106515760405162461bcd60e51b815260206004820152601560248201527414d85b19481d1a5b59481a185cc8195b185c1cd959605a1b60448201526064016105ff565b6000341161068f5760405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b60448201526064016105ff565b6001600160a01b038116600090815260056020526040902054349060ff161561074a5760006106bf6004346114e5565b6001600160a01b0384166000908152600260205260408120805492935034929091906106ec908490611507565b90915550506001600160a01b03831660009081526003602052604081208054839290610719908490611507565b9250508190555080600660008282546107329190611507565b9091555061074290508183611507565b915050610778565b6001600160a01b03821660009081526002602052604081208054349290610772908490611507565b90915550505b60045460008190036107d457600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03851617905561087d565b60005b8181101561087b57836001600160a01b0316600482815481106107fc576107fc611520565b6000918252602090912001546001600160a01b03161461087b57610821600183611536565b810361087357600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0386161790555b6001016107d7565b505b604080516001600160a01b0385168152602081018490527fc55650ccda1011e1cdc769b1fbf546ebb8c97800b6072b49e06cd560305b1d67910160405180910390a150506108cb6001600055565b50565b6108d66112d5565b60005b8151811015610934576001600560008484815181106108fa576108fa611520565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016108d9565b5050565b6109406112d5565b600060095460ff16600481111561095957610959611491565b146109a65760405162461bcd60e51b815260206004820152601860248201527f53616c652068617320616c72656164792073746172746564000000000000000060448201526064016105ff565b600980546001919060ff191682805b0217905550565b6109c46112d5565b600260095460ff1660048111156109dd576109dd611491565b03610a225760405162461bcd60e51b815260206004820152601560248201527414d85b194818d85b9b9bdd0818994818db1bdcd959605a1b60448201526064016105ff565b600a55565b610a2f6112d5565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b610a5b6112ab565b600460095460ff166004811115610a7457610a74611491565b14610ac15760405162461bcd60e51b815260206004820152601760248201527f526566756e647320617265206e6f7420616c6c6f77656400000000000000000060448201526064016105ff565b3360009081526002602052604090205480610b115760405162461bcd60e51b815260206004820152601060248201526f139bc8115512081d1bc81c99599d5b9960821b60448201526064016105ff565b33600081815260026020908152604080832083905560039091528082208290555183156108fc0291849190818181858888f19350505050158015610b59573d6000803e3d6000fd5b5050610b656001600055565b565b610b6f6112d5565b600160095460ff166004811115610b8857610b88611491565b14610bcc5760405162461bcd60e51b815260206004820152601460248201527353616c65206d757374206265206f6e676f696e6760601b60448201526064016105ff565b600980546004919060ff19166001836109b5565b610be86112d5565b610b656000611302565b610bfa6112d5565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190611549565b9050600060095460ff166004811115610ca057610ca0611491565b03610d375760405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044015b6020604051808303816000875af1158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109349190611562565b600a54610d479062278d00611507565b421015610d965760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420737765657020746f6b656e732079657400000000000000000060448201526064016105ff565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401610cf4565b610df16112d5565b600260095460ff166004811115610e0a57610e0a611491565b14610e4f5760405162461bcd60e51b815260206004820152601560248201527453616c65206d75737420626520636f6d706c65746560581b60448201526064016105ff565b4773f87eaea53f15189385a5fb33b6ad0c61c6047d476108fc610e736005846114e5565b6040518115909202916000818181858888f19350505050158015610e9b573d6000803e3d6000fd5b5060405173c3cc6d2db567af6669bec02c8084e71b1714643a904780156108fc02916000818181858888f19350505050158015610934573d6000803e3d6000fd5b610ee46112d5565b600980546000919060ff19166001836109b5565b600260095460ff166004811115610f1157610f11611491565b14610f555760405162461bcd60e51b815260206004820152601460248201527353616c65206973206e6f7420636f6d706c65746560601b60448201526064016105ff565b600854336000908152600360209081526040808320546002909252822054919291610f809190611507565b610f8a9190611584565b905060008111610fd15760405162461bcd60e51b81526020600482015260126024820152714e6f20746f6b656e7320746f20636c61696d60701b60448201526064016105ff565b3360008181526002602090815260408083208390556003909152808220919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561105f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110839190611562565b5060408051338152602081018390527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d591015b60405180910390a150565b610b65336105a0565b6110d26112d5565b600160095460ff1660048111156110eb576110eb611491565b1461112e5760405162461bcd60e51b815260206004820152601360248201527253616c65206d7573742062652061637469766560681b60448201526064016105ff565b600a544210156111805760405162461bcd60e51b815260206004820152601960248201527f53616c652074696d65206e6565647320746f20656c617073650000000000000060448201526064016105ff565b6815af1d78b58c4000004710156111d95760405162461bcd60e51b815260206004820152601b60248201527f41756374696f6e2072657365727665206e6f742072656163686564000000000060448201526064016105ff565b6009805460ff191660021790556006546000906111f69047611507565b476007559050611211816a108b2a2c280290940000006114e5565b60088190556040519081527fef75b5a390479d0727b87d3987ed96018984bdd53fa4946005292453ec3ff76d906020016110b6565b6004818154811061125657600080fd5b6000918252602090912001546001600160a01b0316905081565b6112786112d5565b6001600160a01b0381166112a257604051631e4fbdf760e01b8152600060048201526024016105ff565b6108cb81611302565b6002600054036112ce57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6001546001600160a01b03163314610b655760405163118cdaa760e01b81523360048201526024016105ff565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461138157600080fd5b919050565b60006020828403121561139857600080fd5b813567ffffffffffffffff8111156113af57600080fd5b8201601f810184136113c057600080fd5b803567ffffffffffffffff8111156113da576113da611354565b8060051b604051601f19603f830116810181811067ffffffffffffffff8211171561140757611407611354565b60405291825260208184018101929081018784111561142557600080fd5b6020850194505b8385101561144b5761143d8561136a565b81526020948501940161142c565b509695505050505050565b60006020828403121561146857600080fd5b6114718261136a565b9392505050565b60006020828403121561148a57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600583106114c957634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b60008261150257634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561151a5761151a6114cf565b92915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561151a5761151a6114cf565b60006020828403121561155b57600080fd5b5051919050565b60006020828403121561157457600080fd5b8151801515811461147157600080fd5b808202811582820484141761151a5761151a6114cf56fea26469706673582212208471182d81a01cd66e4269753affbdf738f6326fe50d02bd555b79d6869ac1eb64736f6c634300081a0033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "changeEndTime(uint256)": {
        "params": {
          "_endTime": "Duration of the sale in unix timestamp"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 266,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 354,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "addressEthSpent",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 358,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "addressBonusEarned",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 361,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "buyers",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 375,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "bonusWhitelist",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 377,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "bonusEthSpent",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 379,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "ethRaised",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 381,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "tokensPerEth",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 390,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "saleStatus",
        "offset": 0,
        "slot": "9",
        "type": "t_enum(Status)387"
      },
      {
        "astId": 393,
        "contract": "contracts/EthToTokenSale.sol:MedalSale",
        "label": "saleEndTime",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(Status)387": {
        "encoding": "inplace",
        "label": "enum MedalSale.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}